"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=_default;var _echarts=_interopRequireDefault(require("echarts")),_colorList=_interopRequireDefault(require("../config/colorList")),_tooltipStyle=_interopRequireDefault(require("../config/tooltipStyle"));function _default(e,t,a){var l=Object.assign({gridLeft:30,gridTop:60,gridRight:30,gridBottom:30,legendTop:10,legendName:[""],tooltipUnit:"",xAxisFontSize:12,xAxisMaxCharNum:2,xAxisFilter:"",yAxisUnit:"",yAxisSplitNum:5,dataZoomStyle:[0,100,!1],showPlan:!1,clickFn:null},a),i=[],r=[];if(l.showPlan){if(1<e.length)throw"当设置showPlan的值为true时，数组长度不能大于1";for(var o=[],n=[],s=0;s<e[0].length;s++)i.push(e[0][s].departmentName.replace(l.xAxisFilter,"")),o.push(e[0][s].shouldTarget),n.push(e[0][s].actualTarget);r.push({type:"bar",name:l.legendName[0],data:o,itemStyle:_colorList.default[0],barMaxWidth:20,barCategoryGap:"30%"}),r.push({type:"bar",name:l.legendName[1],data:n,itemStyle:_colorList.default[1],barMaxWidth:20,barCategoryGap:"30%"})}else for(var d=[],u=0;u<e.length;u++){d.push([]);for(var p=0;p<e[u].length;p++)0==u&&i.push(e[u][p].departmentName.replace(l.xAxisFilter,"")),d[u].push(e[u][p].actualTarget);r.push({type:"bar",name:l.legendName[u],data:d[u],itemStyle:_colorList.default[u],barMaxWidth:20,barCategoryGap:"30%"})}var g=_echarts.default.init(document.getElementById(t),"customed"),x=Object.assign({trigger:"axis",formatter:function(e){for(var t=e[0].name,a=0;a<e.length;a++){t+="<br>"+('<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:'+e[a].color.colorStops[0].color+';"></span>')+e[a].seriesName+"："+e[a].value+l.tooltipUnit}return t}},_tooltipStyle.default);g.setOption({tooltip:x,grid:{left:l.gridLeft,top:l.gridTop,right:l.gridRight,bottom:l.gridBottom,containLabel:!0},legend:{top:l.legendTop,data:l.legendName},xAxis:{offset:0,data:i,axisLabel:{lineHeight:l.xAxisFontSize,fontSize:l.xAxisFontSize,formatter:function(e){for(var t="",a=l.xAxisMaxCharNum,i=Math.ceil(e.length/a),r=0;r<i;r++){var o=e.slice(r*a,(r+1)*a);0<i-1&&(o+="\n"),t+=o}return t}}},yAxis:{type:"value",splitNumber:l.yAxisSplitNum,axisLabel:{formatter:function(e){return e+l.yAxisUnit}}},dataZoom:[{type:"inside",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],zoomOnMouseWheel:!1},{type:"slider",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],show:l.dataZoomStyle[2],zoomLock:!0}],series:r}),l.clickFn&&g.on("click",l.clickFn)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
