"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=_default;var _echarts=_interopRequireDefault(require("echarts")),_tooltipStyle=_interopRequireDefault(require("../config/tooltipStyle")),_colorList=_interopRequireDefault(require("../config/colorList"));function _default(e,t,i){var l=Object.assign({gridLeft:30,gridTop:60,gridRight:30,gridBottom:30,legendTop:10,legendName:[""],tooltipUnit:"",xAxisFontSize:12,xAxisMaxCharNum:2,xAxisFilter:"",yAxisUnit:"",yAxisSplitNum:5,dataZoomStyle:[0,100,!1],clickFn:null},i),r=[],a=[],o=[],n=l.legendName[0],s={};l.legendName.shift();for(var d=0;d<e.length;d++){o.push([]);for(var u=0;u<e[d].length;u++)0!=d?o[d].push(e[d][u].actualTarget):(r.push(e[d][u].departmentName.replace(l.xAxisFilter,"")),s[e[d][u].departmentName.replace(l.xAxisFilter,"")]=e[d][u].actualTarget);0!=d&&a.push({type:"bar",name:l.legendName[d-1],data:o[d],itemStyle:_colorList.default[d-1],barMaxWidth:20,barCategoryGap:"30%",stack:"1"})}var p=_echarts.default.init(document.getElementById(t),"customed"),x=Object.assign({trigger:"axis",formatter:function(e){e.unshift({seriesName:n,value:s[e[0].name],color:{colorStops:[{color:"white"}]}});for(var t=e[1].name,i=0;i<e.length;i++){var r='<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:'+e[i].color.colorStops[0].color+';"></span>';0===i&&(r=""),t+="<br>"+r+e[i].seriesName+"ï¼š"+e[i].value+l.tooltipUnit}return t}},_tooltipStyle.default);p.setOption({tooltip:x,grid:{left:l.gridLeft,top:l.gridTop,right:l.gridRight,bottom:l.gridBottom,containLabel:!0},legend:{top:l.legendTop,data:l.legendName},xAxis:{offset:0,data:r,axisLabel:{lineHeight:l.xAxisFontSize,fontSize:l.xAxisFontSize,formatter:function(e){for(var t="",i=l.xAxisMaxCharNum,r=Math.ceil(e.length/i),a=0;a<r;a++){var o=e.slice(a*i,(a+1)*i);0<r-1&&(o+="\n"),t+=o}return t}}},yAxis:{type:"value",splitNumber:l.yAxisSplitNum,axisLabel:{formatter:function(e){return e+l.yAxisUnit}}},dataZoom:[{type:"inside",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],zoomOnMouseWheel:!1},{type:"slider",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],show:l.dataZoomStyle[2],zoomLock:!0}],series:a})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZXMvc3RhY2tlZEJhckNoYXJ0LmpzIl0sIm5hbWVzIjpbIl9lY2hhcnRzIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfdG9vbHRpcFN0eWxlIiwiX2NvbG9yTGlzdCIsIl9kZWZhdWx0IiwiZGF0YSIsImNoYXJ0SUQiLCJvcHRpb25zIiwiZ3JpZFJpZ2h0IiwiT2JqZWN0IiwiYXNzaWduIiwiZ3JpZExlZnQiLCJncmlkVG9wIiwiZ3JpZEJvdHRvbSIsImxlZ2VuZFRvcCIsImxlZ2VuZE5hbWUiLCJ0b29sdGlwVW5pdCIsInhBeGlzRm9udFNpemUiLCJ4QXhpc01heENoYXJOdW0iLCJ4QXhpc0ZpbHRlciIsImRlZmF1bHRPcHRzIiwiZGF0YVpvb21TdHlsZSIsInhBeGlzTmFtZXMiLCJzZXJpZXNEYXRhIiwib3B0cyIsInN1bURhdGEiLCJzaGlmdCIsImkiLCJsZW5ndGgiLCJwdXNoIiwiaiIsImFjdHVhbFRhcmdldCIsImRlcGFydG1lbnROYW1lIiwicmVwbGFjZSIsInlBeGlzU3BsaXROdW0iLCJ0eXBlIiwiaXRlbVN0eWxlIiwiY29sb3JMaXN0IiwiYmFyTWF4V2lkdGgiLCJiYXJDYXRlZ29yeUdhcCIsInN0YWNrIiwiZWNoYXJ0cyIsImluaXQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic3VtTmFtZSIsInJlc3VsdCIsInVuc2hpZnQiLCJzZXJpZXNOYW1lIiwidmFsdWUiLCJuYW1lIiwiY29sb3IiLCJyZXR1cm5WYWwiLCJtYXJrZXIiLCJjb2xvclN0b3BzIiwic2V0T3B0aW9uIiwiYm90dG9tIiwiY29udGFpbkxhYmVsIiwibGVnZW5kIiwidG9wIiwidHJpZ2dlciIsImZvcm1hdHRlciIsImZvbnRTaXplIiwic3RyIiwibWF4TGVuZ3RoIiwicm93TnVtIiwiTWF0aCIsImNlaWwiLCJwYXJ0Iiwic2xpY2UiLCJ5QXhpcyIsInRvb2x0aXBTdHlsZSIsImF4aXNMYWJlbCIsInlBeGlzVW5pdCIsInJpZ2h0Iiwi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LEtBQUFDLEtBQUFsQixFQUFBckIsT0FBQW9DLEdBSFhyQyxFQUFBLEVBQUFBLEVBQUFzQyxFQUFBdEMsSUFBQSxDQU9nQm1CLElBQU1zQixFQUFJbEIsRUFBMUJtQixNQUFBMUMsRUFBQXFDLEdBQUFyQyxFQUFBLEdBQUFxQyxHQWtDcUIsRUFBYkMsRUFBUyxJQUFVRyxHQUFRLE1BakNsQkwsR0FBR2pCLEVBRUpPLE9BQU1VLEtBR3RCTyxNQUFPbEIsQ0FDVmpCLEtBQUEsUUFDRm9DLFlBQUFBLEVBbkJQckMsY0F1RFFzQyxVQUFXLENBbkNiakIsVUFBVSxTQUFBTixHQUFBLE9BQUFBLEVBQUF6QixFQUFBaUQsYUFLUkMsU0FBWWxFLENBQUFBLENBQ04yQixLQUFNLFNBQ1pzQixXQUFjLEVBUE5rQixNQUFBbkQsRUFBQUgsY0FBQSxHQVNKdUQsSUFBQXBELEVBQUFILGNBQUEsR0FDQ0csa0JBREQsR0FFQSxDQVhJVyxLQUFBLFNBYUwwQyxXQUFBLEVBQ0dGLE1BREhuRCxFQUFBSCxjQUFBLEdBRUdDLElBQUFBLEVBRkhELGNBQUEsR0FHSG1ELEtBQVdoRCxFQUFBSCxjQUFBLEdBQ1B5RCxVQUFZdEQsSUFFWnFDLE9BQUFBIiwiZmlsZSI6Im1vZHVsZXMvc3RhY2tlZEJhckNoYXJ0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cydcbmltcG9ydCB0b29sdGlwU3R5bGUgZnJvbSAnLi4vY29uZmlnL3Rvb2x0aXBTdHlsZSdcbmltcG9ydCBjb2xvckxpc3QgZnJvbSAnLi4vY29uZmlnL2NvbG9yTGlzdCdcblxuLy/loIblj6Dmn7Hnirblm75cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChkYXRhLCBjaGFydElELCBvcHRpb25zKSB7XG4gICAgdmFyIGRlZmF1bHRPcHRzID0ge1xuICAgICAgICBncmlkTGVmdDogMzAsICAgICAgICAgICAgICAgICAgIC8v5Zu+6KGo6Led56a75a655Zmo5bem6L6555WM6Led56a7XG4gICAgICAgIGdyaWRUb3A6IDYwLCAgICAgICAgICAgICAgICAgICAgLy/kuIpcbiAgICAgICAgZ3JpZFJpZ2h0OiAzMCwgICAgICAgICAgICAgICAgICAvL+WPs1xuICAgICAgICBncmlkQm90dG9tOiAzMCwgICAgICAgICAgICAgICAgIC8v5LiLXG4gICAgICAgIGxlZ2VuZFRvcDogMTAsICAgICAgICAgICAgICAgICAgLy/lm77kvovot53nprvlrrnlmajkuIrovrnnlYzot53nprtcbiAgICAgICAgbGVnZW5kTmFtZTogWycnXSwgICAgICAgICAgICAgICAvL+WbvuS+i+WQjeensFxuICAgICAgICB0b29sdGlwVW5pdDogJycsICAgICAgICAgICAgICAgIC8v5o+Q56S65qGG5Y2V5L2NXG4gICAgICAgIHhBeGlzRm9udFNpemU6IDEyLCAgICAgICAgICAgICAgLy9Y6L205a2X5L2T5aSn5bCPXG4gICAgICAgIHhBeGlzTWF4Q2hhck51bTogMiwgICAgICAgICAgICAgLy9Y6L205q+P6KGM5paH5a2X5pyA5aSn5Liq5pWwXG4gICAgICAgIHhBeGlzRmlsdGVyOiAnJywgICAgICAgICAgICAgICAgLy9Y6L206L+H5ruk5paH5a2XXG4gICAgICAgIHlBeGlzVW5pdDogJycsICAgICAgICAgICAgICAgICAgLy9Z6L205Y2V5L2NXG4gICAgICAgIHlBeGlzU3BsaXROdW06IDUsICAgICAgICAgICAgICAgLy9Z6L205YiG5Ymy57q/5Liq5pWwXG4gICAgICAgIGRhdGFab29tU3R5bGU6IFswLCAxMDAsIGZhbHNlXSwgLy/lm77ooajlkoxkYXRhWm9vbee7hOS7tueahOW8gOWni+S9jee9ru+8jOe7k+adn+S9jee9ruS7peWPiuaYr+WQpuaYvuekumRhdGFab29t57uE5Lu2XG4gICAgICAgIGNsaWNrRm46IG51bGwsICAgICAgICAgICAgICAgICAgLy/ngrnlh7vkuovku7ZcbiAgICB9O1xuICAgIHZhciBvcHRzID0gT2JqZWN0LmFzc2lnbihkZWZhdWx0T3B0cywgb3B0aW9ucyk7XG4gICAgdmFyIHhBeGlzTmFtZXMgPSBbXSxcbiAgICAgICAgc2VyaWVzID0gW10sXG4gICAgICAgIHNlcmllc0RhdGEgPSBbXSxcbiAgICAgICAgc3VtTmFtZSA9IG9wdHMubGVnZW5kTmFtZVswXSxcbiAgICAgICAgc3VtRGF0YSA9IHt9O1xuICAgIG9wdHMubGVnZW5kTmFtZS5zaGlmdCgpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkrKykge1xuICAgICAgICBzZXJpZXNEYXRhLnB1c2goW10pO1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IGRhdGFbaV0ubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgIGlmIChpID09IDApIHtcbiAgICAgICAgICAgICAgICB4QXhpc05hbWVzLnB1c2goZGF0YVtpXVtqXS5kZXBhcnRtZW50TmFtZS5yZXBsYWNlKG9wdHMueEF4aXNGaWx0ZXIsICcnKSk7XG4gICAgICAgICAgICAgICAgc3VtRGF0YVtkYXRhW2ldW2pdLmRlcGFydG1lbnROYW1lLnJlcGxhY2Uob3B0cy54QXhpc0ZpbHRlciwgJycpXSA9IGRhdGFbaV1bal0uYWN0dWFsVGFyZ2V0O1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VyaWVzRGF0YVtpXS5wdXNoKGRhdGFbaV1bal0uYWN0dWFsVGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaSA9PSAwKSBjb250aW51ZTtcbiAgICAgICAgc2VyaWVzLnB1c2goe1xuICAgICAgICAgICAgdHlwZTogJ2JhcicsXG4gICAgICAgICAgICBuYW1lOiBvcHRzLmxlZ2VuZE5hbWVbaSAtIDFdLFxuICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YVtpXSxcbiAgICAgICAgICAgIGl0ZW1TdHlsZTogY29sb3JMaXN0W2kgLSAxXSxcbiAgICAgICAgICAgIGJhck1heFdpZHRoOiAyMCxcbiAgICAgICAgICAgIGJhckNhdGVnb3J5R2FwOiAnMzAlJyxcbiAgICAgICAgICAgIHN0YWNrOiAnMScgLy/nm7jlkIznmoRzdGFja+WAvOWPr+S7peWghuWPoOaUvue9rlxuICAgICAgICB9KTtcbiAgICB9XG4gICAgdmFyIGNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNoYXJ0SUQpLCAnY3VzdG9tZWQnKSxcbiAgICAgICAgdG9vbHRpcCA9IE9iamVjdC5hc3NpZ24oe1xuICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLFxuICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnVuc2hpZnQoe1xuICAgICAgICAgICAgICAgICAgICBzZXJpZXNOYW1lOiBzdW1OYW1lLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogc3VtRGF0YVtyZXN1bHRbMF0ubmFtZV0sXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvclN0b3BzOiBbe2NvbG9yOiAnd2hpdGUnfV1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHZhciByZXR1cm5WYWwgPSByZXN1bHRbMV0ubmFtZTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWFya2VyID0gJzxzcGFuIHN0eWxlPVwiZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLXJpZ2h0OjVweDtib3JkZXItcmFkaXVzOjEwcHg7d2lkdGg6MTBweDtoZWlnaHQ6MTBweDtiYWNrZ3JvdW5kLWNvbG9yOicgKyByZXN1bHRbaV0uY29sb3IuY29sb3JTdG9wc1swXS5jb2xvciArICc7XCI+PC9zcGFuPic7XG4gICAgICAgICAgICAgICAgICAgIGkgPT09IDAgJiYgKG1hcmtlciA9ICcnKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuVmFsICs9ICc8YnI+JyArIG1hcmtlciArIHJlc3VsdFtpXS5zZXJpZXNOYW1lICsgJ++8micgKyByZXN1bHRbaV0udmFsdWUgKyBvcHRzLnRvb2x0aXBVbml0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmV0dXJuVmFsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCB0b29sdGlwU3R5bGUpO1xuICAgIGNoYXJ0LnNldE9wdGlvbih7XG4gICAgICAgIHRvb2x0aXA6IHRvb2x0aXAsXG4gICAgICAgIGdyaWQ6IHtcbiAgICAgICAgICAgIGxlZnQ6IG9wdHMuZ3JpZExlZnQsXG4gICAgICAgICAgICB0b3A6IG9wdHMuZ3JpZFRvcCxcbiAgICAgICAgICAgIHJpZ2h0OiBvcHRzLmdyaWRSaWdodCxcbiAgICAgICAgICAgIGJvdHRvbTogb3B0cy5ncmlkQm90dG9tLFxuICAgICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGxlZ2VuZDoge1xuICAgICAgICAgICAgdG9wOiBvcHRzLmxlZ2VuZFRvcCxcbiAgICAgICAgICAgIGRhdGE6IG9wdHMubGVnZW5kTmFtZSxcbiAgICAgICAgfSxcbiAgICAgICAgeEF4aXM6IHtcbiAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgIGRhdGE6IHhBeGlzTmFtZXMsXG4gICAgICAgICAgICBheGlzTGFiZWw6IHtcbiAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBvcHRzLnhBeGlzRm9udFNpemUsXG4gICAgICAgICAgICAgICAgZm9udFNpemU6IG9wdHMueEF4aXNGb250U2l6ZSxcbiAgICAgICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc3RyID0gJycsXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXhMZW5ndGggPSBvcHRzLnhBeGlzTWF4Q2hhck51bSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvd051bSA9IE1hdGguY2VpbCh2YWx1ZS5sZW5ndGggLyBtYXhMZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJvd051bTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFydCA9IHZhbHVlLnNsaWNlKGkgKiBtYXhMZW5ndGgsIChpICsgMSkgKiBtYXhMZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93TnVtIC0gMSA+IDAgJiYgKHBhcnQgKz0gJ1xcbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RyICs9IHBhcnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0cjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHlBeGlzOiB7XG4gICAgICAgICAgICB0eXBlOiAndmFsdWUnLFxuICAgICAgICAgICAgc3BsaXROdW1iZXI6IG9wdHMueUF4aXNTcGxpdE51bSxcbiAgICAgICAgICAgIGF4aXNMYWJlbDoge1xuICAgICAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSArIG9wdHMueUF4aXNVbml0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZGF0YVpvb206IFt7XG4gICAgICAgICAgICB0eXBlOiAnaW5zaWRlJyxcbiAgICAgICAgICAgIHhBeGlzSW5kZXg6IDAsXG4gICAgICAgICAgICBzdGFydDogb3B0cy5kYXRhWm9vbVN0eWxlWzBdLFxuICAgICAgICAgICAgZW5kOiBvcHRzLmRhdGFab29tU3R5bGVbMV0sXG4gICAgICAgICAgICB6b29tT25Nb3VzZVdoZWVsOiBmYWxzZVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB0eXBlOiAnc2xpZGVyJyxcbiAgICAgICAgICAgIHhBeGlzSW5kZXg6IDAsXG4gICAgICAgICAgICBzdGFydDogb3B0cy5kYXRhWm9vbVN0eWxlWzBdLFxuICAgICAgICAgICAgZW5kOiBvcHRzLmRhdGFab29tU3R5bGVbMV0sXG4gICAgICAgICAgICBzaG93OiBvcHRzLmRhdGFab29tU3R5bGVbMl0sXG4gICAgICAgICAgICB6b29tTG9jazogdHJ1ZVxuICAgICAgICB9XSxcbiAgICAgICAgc2VyaWVzOiBzZXJpZXNcbiAgICB9KTtcbn07XG4iXX0=
