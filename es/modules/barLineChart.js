"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=_default;var _echarts=_interopRequireDefault(require("echarts")),_tooltipStyle=_interopRequireDefault(require("../config/tooltipStyle"));function _default(e,t,i){for(var l=Object.assign({gridLeft:30,gridTop:60,gridRight:30,gridBottom:30,legendTop:10,legendName:["",""],tooltipUnit:"",xAxisFontSize:12,xAxisMaxCharNum:2,xAxisFilter:"",yAxisUnit:"",dataZoomStyle:[0,100,!1],clickFn:null},i),o=[],r=[],a=[],n=[],s=0;s<e.length;s++)o.push(e[s].departmentName.replace(l.xAxisFilter,"")),r.push(e[s].shouldTarget),a.push(e[s].actualTarget);n.push({type:"line",name:l.legendName[0],data:r,itemStyle:{color:"#4ED552"}}),n.push({type:"bar",name:l.legendName[1],data:a,barMaxWidth:20,itemStyle:{color:new _echarts.default.graphic.LinearGradient(0,0,0,1,[{offset:0,color:"#1595ff"},{offset:1,color:"#8c53ca"}])}});var d=_echarts.default.init(document.getElementById(t),"customed"),c=Object.assign({trigger:"axis",axisPointer:{type:"line",lineStyle:{color:"#ccc",width:1},label:{precision:2},z:0},formatter:function(e){for(var t=e[0].name,i=0;i<e.length;i++){t+="<br>"+('<span style="display:inline-block;margin-right:5px;border-radius:10px;width:10px;height:10px;background-color:'+(e[i].color.colorStops?e[i].color.colorStops[0].color:e[i].color)+';"></span>')+e[i].seriesName+"ï¼š"+e[i].value+l.tooltipUnit}return t}},_tooltipStyle.default);d.setOption({tooltip:c,grid:{left:l.gridLeft,top:l.gridTop,right:l.gridRight,bottom:l.gridBottom,containLabel:!0},legend:{top:l.legendTop,data:l.legendName},xAxis:{data:o,axisLabel:{lineHeight:l.xAxisFontSize,fontSize:l.xAxisFontSize,formatter:function(e){for(var t="",i=l.xAxisMaxCharNum,o=Math.ceil(e.length/i),r=0;r<o;r++){var a=e.slice(r*i,(r+1)*i);0<o-1&&(a+="\n"),t+=a}return t}}},yAxis:{type:"value",splitNumber:l.yAxisSplitNum,axisLabel:{formatter:function(e){return e+l.yAxisUnit}}},dataZoom:[{type:"inside",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],zoomOnMouseWheel:!1},{type:"slider",xAxisIndex:0,start:l.dataZoomStyle[0],end:l.dataZoomStyle[1],show:l.dataZoomStyle[2],zoomLock:!0}],series:n}),l.clickFn&&d.on("click",l.clickFn)}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
