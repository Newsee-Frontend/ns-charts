"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_typeof2=_interopRequireDefault(require("@babel/runtime/helpers/typeof"));!function(o,e){"function"==typeof define&&define.amd?define(["exports","echarts"],e):"object"===("undefined"==typeof exports?"undefined":(0,_typeof2.default)(exports))&&"string"!=typeof exports.nodeName?e(exports,require("echarts")):e({},(void 0).echarts)}(0,function(o,e){var r;if(!e)return r="ECharts is not Loaded",void("undefined"!=typeof console&&console&&console.error&&console.error(r));e.registerTheme("customed",{color:["#1595ff","#00c7a0","#f6c041","#f66d41","#f641ab","#a44cf4"],backgroundColor:"rgba(0, 0, 0, 0)",textStyle:{},title:{textStyle:{color:"#333"},subtextStyle:{color:"#aaa"}},line:{itemStyle:{normal:{borderWidth:"0"}},lineStyle:{normal:{width:"2"}},symbolSize:"5",symbol:"emptyCircle",smooth:!0},radar:{itemStyle:{normal:{borderWidth:"0"}},lineStyle:{normal:{width:"2"}},symbolSize:"2",symbol:"emptyCircle",smooth:!0},bar:{itemStyle:{normal:{barBorderWidth:0,barBorderColor:"#ccc"},emphasis:{barBorderWidth:0,barBorderColor:"#ccc"}}},pie:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},scatter:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},boxplot:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},parallel:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},sankey:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},funnel:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},gauge:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"},emphasis:{borderWidth:0,borderColor:"#ccc"}}},candlestick:{itemStyle:{normal:{color:"#c23531",color0:"#314656",borderColor:"#c23531",borderColor0:"#314656",borderWidth:1}}},graph:{itemStyle:{normal:{borderWidth:0,borderColor:"#ccc"}},lineStyle:{normal:{width:1,color:"#aaa"}},symbolSize:"2",symbol:"emptyCircle",smooth:!0,color:["#1595ff","#00c7a0","#f6c041","#f66d41","#f641ab","#a44cf4"],label:{normal:{textStyle:{color:"#333333"}}}},map:{itemStyle:{normal:{areaColor:"#eee",borderColor:"#444",borderWidth:.5},emphasis:{areaColor:"rgba(255,215,0,0.8)",borderColor:"#444",borderWidth:1}},label:{normal:{textStyle:{color:"#000"}},emphasis:{textStyle:{color:"rgb(100,0,0)"}}}},geo:{itemStyle:{normal:{areaColor:"#eee",borderColor:"#444",borderWidth:.5},emphasis:{areaColor:"rgba(255,215,0,0.8)",borderColor:"#444",borderWidth:1}},label:{normal:{textStyle:{color:"#000"}},emphasis:{textStyle:{color:"rgb(100,0,0)"}}}},categoryAxis:{axisLine:{show:!1,lineStyle:{color:"#333"}},axisTick:{show:!1,lineStyle:{color:"#333"}},axisLabel:{show:!0,textStyle:{color:"#666666"}},splitLine:{show:!1,lineStyle:{color:["#ccc"]}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}}},valueAxis:{axisLine:{show:!1,lineStyle:{color:"red"}},axisTick:{show:!1,lineStyle:{color:"#333"}},axisLabel:{show:!0,textStyle:{color:"#999999"}},splitLine:{show:!0,lineStyle:{color:["#efefef"]}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}}},logAxis:{axisLine:{show:!1,lineStyle:{color:"red"}},axisTick:{show:!1,lineStyle:{color:"#333"}},axisLabel:{show:!1,textStyle:{color:"#333"}},splitLine:{show:!1,lineStyle:{color:["#ccc"]}},splitArea:{show:!1,areaStyle:{color:["red","rgba(200,200,200,0.3)"]}}},timeAxis:{axisLine:{show:!1,lineStyle:{color:"red"}},axisTick:{show:!1,lineStyle:{color:"#333"}},axisLabel:{show:!1,textStyle:{color:"#333"}},splitLine:{show:!1,lineStyle:{color:["#ccc"]}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}}},toolbox:{iconStyle:{normal:{borderColor:"#999999"},emphasis:{borderColor:"#666666"}}},legend:{textStyle:{color:"#333333"}},tooltip:{axisPointer:{lineStyle:{color:"#ccc",width:1},crossStyle:{color:"#ccc",width:1}}},timeline:{lineStyle:{color:"#293c55",width:"1"},itemStyle:{normal:{color:"#293c55",borderWidth:1},emphasis:{color:"#a9334c"}},controlStyle:{normal:{color:"#293c55",borderColor:"#293c55",borderWidth:.5},emphasis:{color:"#293c55",borderColor:"#293c55",borderWidth:.5}},checkpointStyle:{color:"#2b181c",borderColor:"rgba(194,53,49, 0.5)"},label:{normal:{textStyle:{color:"#293c55"}},emphasis:{textStyle:{color:"#293c55"}}}},visualMap:{color:["#1595ff","#00c7a0","#f6c041","#f66d41","#f641ab","#a44cf4"]},dataZoom:{backgroundColor:"rgba(47,69,84,0)",dataBackgroundColor:"rgba(47,69,84,0.3)",fillerColor:"rgba(167,183,204,0.4)",handleColor:"#a7b7cc",handleSize:"100%",textStyle:{color:"#333"}},markPoint:{label:{normal:{textStyle:{color:"#333333"}},emphasis:{textStyle:{color:"#333333"}}}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
